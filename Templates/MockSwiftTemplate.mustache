import Foundation

public enum MockStubNames: String {
    {{#.}}
    case {{name}}
    {{/.}}
    case all
}

public extension MockNetworkRequestManager {
    func startMocks(startStubs: [MockStubNames]?) {

        guard let startStubs = startStubs else {
            return
        }
        {{#.}}
        // MARK: {{name}}
        if startStubs.contains(.{{name}}) || startStubs.contains(.all) {
            responseStubs.append(stubFactory(containsString: "{{#request.url}}{{{joinedPath}}}{{/request.url}}", relativePathForMockJSONFile: "{{name}}.json", stubName: "{{name}}", httpMethod: "{{request.method}}", headerResponse: {{^responseHeader}}[AnyHashable: Any](){{/responseHeader}}{{#responseHeader.length}}[{{/responseHeader.length}}{{#responseHeader}}"{{key}}": "{{value}}"{{^last}}, {{/last}}{{/responseHeader}}{{#responseHeader.length}}]{{/responseHeader.length}}))
        }
        {{/.}}
    }
}