import okhttp3.mockwebserver.Dispatcher
import okhttp3.mockwebserver.MockResponse
import okhttp3.mockwebserver.MockWebServer
import okhttp3.mockwebserver.RecordedRequest
import java.io.File
import java.io.InputStream

class MockServer {

    private val server = MockWebServer()

    init {

        {{#item}}
        val {{name}}String: InputStream = File("{{name}}.json").inputStream().bufferedReader().use { it.readText() }
        {{/item}}

        // setup the dispatcher to use files as the mock responses
        server.setDispatcher(object : Dispatcher() {
            override fun dispatch(request: RecordedRequest): MockResponse {
            {{#item}}if (request.getPath().equals("{{request.url.joinedPath}}")){
                return MockResponse().setResponseCode(200).setBody({{name}}String)
            }{{^last}} else {{/last}}{{/item}}
                return MockResponse().setResponseCode(404);
            }   
            })
        }
}

